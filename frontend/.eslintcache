[{"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/Login.js":"1","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/grid.js":"2","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/containers/go.js":"3","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/UserMenu.js":"4","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/index.js":"5","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/useClientSocket.js":"6","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/axios.js":"7","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/board.js":"8","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/history.js":"9","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/myProfile.js":"10","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/privateRoute.js":"11","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/index.js":"12","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/line.js":"13","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/star.js":"14"},{"size":4762,"mtime":1611203613051,"results":"15","hashOfConfig":"16"},{"size":2439,"mtime":1611201121066,"results":"17","hashOfConfig":"16"},{"size":4524,"mtime":1611201249113,"results":"18","hashOfConfig":"16"},{"size":2342,"mtime":1611210106198,"results":"19","hashOfConfig":"16"},{"size":635,"mtime":1611151230541,"results":"20","hashOfConfig":"16"},{"size":1481,"mtime":1611159763386,"results":"21","hashOfConfig":"16"},{"size":1103,"mtime":1611159763371,"results":"22","hashOfConfig":"16"},{"size":510,"mtime":1611159763372,"results":"23","hashOfConfig":"16"},{"size":243,"mtime":1611207352330,"results":"24","hashOfConfig":"16"},{"size":479,"mtime":1611207035162,"results":"25","hashOfConfig":"16"},{"size":778,"mtime":1611146493907,"results":"26","hashOfConfig":"16"},{"size":836,"mtime":1611159763385,"results":"27","hashOfConfig":"16"},{"size":798,"mtime":1611159763395,"results":"28","hashOfConfig":"16"},{"size":803,"mtime":1611133872912,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"kzbzoi",{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/Login.js",["63","64"],"import React, {useEffect, useState} from 'react';\nimport {userLogin, userRegister} from '../axios'\n// import { useParam, useHistory } from 'react-router-dom';\nimport {sha256} from 'crypto-hash';\n\nfunction Login(props){\n    const {setUserId, history, setProfileUserName, setProfileUserLevel} = props\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n    \n    const handleLogin = async (e) => {\n        e.preventDefault()\n        let userData = {name: userName, password: password};\n        try{\n            const hashPassword = await sha256(password);\n            userData.password = hashPassword;\n            // console.log(`plain-text: ${password}\\nhash: ${hashPassword}`)\n            const res = await userLogin(userData);\n            //res is like {status: \"Failed\", msg: \"User does not exist\"}\n            if (res.status === 'Success'){\n                console.log('My userId:', res.id)\n                setUserId(res.id);\n                setProfileUserName(res.userName);\n                setProfileUserLevel(res.userLevel);\n                history.push('/user');\n            }\n            else if(res.status === 'Failed'){\n                if(res.msg === 'User does not exist'){\n                    history.push('/register');\n                }\n                else{\n                    console.log('Login Error:', res.msg);\n                }\n            }\n            else{\n                throw('Login Status Error!')\n            }\n        }catch(err){\n            console.log(err)\n            console.log('Authentication Error!')\n        }\n    }\n\n    return (\n        <>\n            <h1 className=\"title glow-on-hover\">GO game</h1>\n            <form className=\"form\">\n                <div className=\"form-list\">\n                    <div className=\"form-item\">\n                        <label htmlFor=\"username\">Username : </label>\n                        <input className=\"form-input\" type=\"text\" id='userName' onChange={(e) => setUserName(e.target.value)} />\n                    </div>\n                    <div className=\"form-item\">\n                        <label htmlFor=\"password\">Password : </label>\n                        <input className=\"form-input\" type=\"password\" id='password' onChange={(e) => setPassword(e.target.value)} />\n                    </div>\n                </div>\n                <button onClick={handleLogin} className=\"button\">Login</button>\n            </form> \n        </>\n    )\n}\n\nfunction Register(props){\n    const {setUserId, history, setProfileUserName, setProfileUserLevel} = props\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n    const [level, setLevel] = useState('');\n\n    const handleRegister = async (e) => {\n        e.preventDefault()\n        let userData = {name: userName, password: password, level: level};\n        const hashPassword = await sha256(password);\n        userData.password = hashPassword;\n        // console.log(`plain-text: ${password}\\nhash: ${hashPassword}`)\n        try{\n            const res = await userRegister(userData);\n            if (res.status === 'Success'){\n                console.log('My userId:', res.id)\n                setUserId(res.id);\n                setProfileUserName(res.userName);\n                setProfileUserLevel(res.userLevel);\n                history.push('/user');\n            }\n            else if(res.status === 'Failed'){\n                console.log(res.msg);\n            }\n        }catch(err){\n            console.log(err)\n            console.log('Authentication Error!')\n        }\n    }\n\n    return (\n        <>\n            <h1 className=\"title glow-on-hover\">GO game</h1>\n            <form className=\"form\">\n                <div className=\"form-list\">\n                    <div className=\"form-item\">\n                        <label htmlFor=\"username\">Username : </label>\n                        <input className=\"form-input\" type=\"text\" id='userName' onChange={(e) => setUserName(e.target.value)} /><br/>\n                    </div>\n                    <div className=\"form-item\">\n                        <label htmlFor=\"password\">Password : </label>\n                        <input className=\"form-input\" type=\"password\" id='password' onChange={(e) => setPassword(e.target.value)} /><br/>\n                    </div>\n                    <div className=\"form-item\">\n                        <label htmlFor=\"level\">Level : </label>\n                        <input className=\"form-input\" type=\"text\" id='level' onChange={(e) => setLevel(e.target.value)} /><br/>\n                    </div>\n                </div>\n                <button onClick={handleRegister} className=\"button\">Register</button>\n            </form> \n        </>\n    )\n}\n\nexport {Login, Register};\n",["65","66"],"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/grid.js",["67","68","69","70","71"],"import React, {useState} from 'react'\n\nimport black_stone from '../img/black-stone.png'\nimport white_stone from '../img/white-stone.png'\nimport black_stone_focus from '../img/black-stone-focus.png'\nimport white_stone_focus from '../img/white-stone-focus.png'\nimport empty_stone from '../img/empty-stone.png'\nimport '../style.css'\n\nconst Grid = props => {\n    const {row, column, boardSize, record, setRecord, meToPlay, \n        setMeToPlay, myPosition, setMyPosition, stone, setStone, \n        stepCount, setStepCount, myColor, opponentPosition} = props;\n    const [myRow, myCol] = myPosition.split('@');\n\n    const handleMouseEnter = e => {\n        if(!meToPlay)return;\n        const state = record[row][column]\n        if (state === 0) {\n            stone[row][column] = (myColor==='black')? black_stone: white_stone;\n            e.target.src = stone[row][column]\n            setStone(stone)\n            e.target.style[\"opacity\"] = 0.5\n        }\n    }\n\n    const handleMouseLeave = e => {\n        if(!meToPlay)return;\n        const state = record[row][column]\n        if (state === 0) {\n            stone[row][column] = empty_stone\n            e.target.src = stone[row][column]\n            setStone(stone)\n            e.target.style[\"opacity\"] = 1\n        }\n    }\n\n\n    const handleOnClick = e => {\n        const [opponentRow, opponentCol] = opponentPosition.split('@');\n        if(!meToPlay)return;\n        if(record[row][column] !== 0)return;\n        if (myColor === 'black') { // BLACK\n            record[row][column] = stepCount;\n            e.target.style[\"opacity\"] = 1;    \n            stone[row][column] = black_stone_focus     \n            if(opponentRow!=='-1'&&opponentCol!=='-1'){\n                stone[opponentRow][opponentCol] = white_stone;\n            }\n        }\n        else { // WHITE\n            record[row][column] = stepCount;\n            e.target.style[\"opacity\"] = 1;\n            stone[row][column] = white_stone_focus \n            if(opponentRow!=='-1'&&opponentCol!=='-1'){\n                stone[opponentRow][opponentCol] = black_stone;\n            }    \n        }\n        setStepCount(stepCount+1);\n        setMeToPlay(false);\n        setRecord(record)\n        setStone(stone)\n        setMyPosition(`${row}@${column}`)\n    }\n\n    return <img src={stone[row][column]} className=\"grid\"\n            onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} onClick={handleOnClick} />\n}\n\nexport default Grid\n","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/containers/go.js",["72","73","74","75"],"import React, {useState, useEffect, useRef} from 'react'\nimport {makeMove} from '../axios.js';\n\nimport Board from '../components/board.js'\nimport Line from '../components/line.js'\nimport Index from '../components/index.js'\nimport Star from '../components/star.js'\nimport black_stone from '../img/black-stone.png'\nimport white_stone from '../img/white-stone.png'\nimport black_stone_focus from '../img/black-stone-focus.png'\nimport white_stone_focus from '../img/white-stone-focus.png'\nimport empty_stone from '../img/empty-stone.png'\nimport '../style.css'\n\nconst boardSize = 19\n\nconst Go = (props) => {\n    const {color: myColor, opponent: myOpponentName, stepReceivedStr: opponentStepStr, \n         boardId, userId} = props;\n    const [record, setRecord] = useState(Array.from(Array(boardSize), _ => Array(boardSize).fill(0))) // EMPTY, BLACK, WHITE = 0, 1, 2\n    const [stepCount, setStepCount] = useState(1);\n    // const [curPlayer, setCurPlayer] = useState(0) // BLACK, WHITE = 0, 1 timer running\n    // const [curPosition, setCurPosition] = useState({row: -1, column: -1})\n    const [meToPlay, setMeToPlay] = useState(myColor==='black'? true:false);\n    const [myPosition, setMyPosition] = useState('-1@-1');\n    const [opponentPosition, setOpponentPosition] = useState('-1@-1');\n    const [stone, setStone] = useState(Array.from(Array(boardSize), _ => Array(boardSize).fill(empty_stone)))\n\n    // const updateRecord = newRecord => setRecord(newRecord)\n    // const updateCurPlayer = newCurPlayer => setCurPlayer(newCurPlayer)\n    // const updateCurPosition = newPosition => setMyPo(newPosition)\n    // const updateColor = newColor => setColor(newColor)\n    // const gridRefs = [];\n    // useEffect(()=>{\n    //     for (let i=0; i<boardSize*boardSize; i++){\n    //         gridRefs.push(useRef());\n    //     }\n    // }, [])\n\n    // useEffect(()=>{\n    //     if (curPosition.row === -1) return;\n    //     console.log('In use effect \"go.js\"', myColor, curPlayer);\n    //     if ((curPlayer === 1 && myColor === 'black') || (curPlayer === 0 && myColor === 'white')){\n    //         makeMove(boardId, userId, {flag: 'step', pos:{row: curPosition.row, col: curPosition.column} })\n    //     }\n    // }, [curPosition])\n\n    // useEffect(() => {\n    //     if (opponentStepStr === '-1@-1') return;\n    //     console.log('In use Effect props changed, opponent pos:', opponentStepStr);\n    //     // setStepCount(stepCount+1);\n    //     const [row, col] = opponentStepStr.split('@');\n    //     setCurPosition({row: row, column: col});\n    //     // setCurPlayer(1-curPlayer);\n    //     // if \n    //     // color[opponentStep.row][opponentStep.col] = \n    // }, [opponentStepStr])\n    useEffect(()=>{\n        if(opponentStepStr==='-1@-1') return;\n        setOpponentPosition(opponentStepStr);\n        const [opponentRow, opponentCol] = opponentStepStr.split('@');\n        const [myCurRow, myCurCol] = myPosition.split('@');\n        record[opponentRow][opponentCol] = stepCount;\n        setStepCount(stepCount+1);\n        setMeToPlay(true);\n        if(myColor==='black'){\n            stone[opponentRow][opponentCol] = white_stone_focus\n            if(myCurRow!=='-1' &&myCurCol!=='-1'){\n                stone[myCurRow][myCurCol] = black_stone;\n            }\n        }else{\n            stone[opponentRow][opponentCol] = black_stone_focus\n            if(myCurRow!=='-1' &&myCurCol!=='-1'){\n                stone[myCurRow][myCurCol] = white_stone;\n            }\n        }\n        setStone(stone)\n    },[opponentStepStr])\n    \n    useEffect(()=>{\n        if(myPosition==='-1@-1')return;\n        if(!meToPlay){\n            const [row, col] = myPosition.split('@')\n            makeMove(boardId, userId, {flag: 'step', pos:{row: row, col: col} })\n        }\n    },[myPosition])\n\n    return (\n        <div>\n            <h1 className=\"title glow-on-hover\">GO game</h1>\n            <h2 className=\"my-color\">My color : {myColor}</h2>\n            <div className=\"board-root\">\n                <Board boardSize={boardSize} record={record} setRecord={setRecord} meToPlay={meToPlay}\n                setMeToPlay={setMeToPlay} myPosition={myPosition} setMyPosition={setMyPosition} opponentPosition={opponentPosition}\n                stone={stone} setStone={setStone} stepCount={stepCount} setStepCount={setStepCount} myColor={myColor}/>\n                <Line boardSize={boardSize} />\n                <Index boardSize={boardSize} />\n                <Star boardSize={boardSize} />\n            </div>\n        </div>\n    )\n}\n\nexport default Go\n","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/UserMenu.js",["76","77","78","79"],"import React, {useEffect, useState} from 'react';\nimport { findOpponent, sendUserId } from '../axios.js';\nimport { webSocketId } from '../useClientSocket.js';\nimport {PrivateGameRoute} from './privateRoute.js';\nimport {History} from './history.js';\nimport {MyProfile} from './myProfile.js';\nimport { Route, Redirect, useRouteMatch, NavLink} from \"react-router-dom\";\nimport GO from '../containers/go.js';\nimport waiting_img from '../img/waiting.gif';\n\nfunction UserMenu(props){\n    const {userId, isPlaying, color, opponent, stepReceivedStr, boardId, userName, userLevel} = props;\n    const { url, path } = useRouteMatch();\n    useEffect(()=>{\n        console.log('In user Menu, userId = :', userId, webSocketId);\n        sendUserId(userId, webSocketId);\n    }, [])\n\n    return (\n        <>\n            <Route exact path={`${path}`}>\n                <UserHomePage url={url} userId={userId}/>\n            </Route>\n\n            <PrivateGameRoute path={`${path}/game`} component={GO} isPlaying={isPlaying}\n            color={color} opponent={opponent} \n            stepReceivedStr={stepReceivedStr} boardId={boardId} userId={userId} >\n            </PrivateGameRoute>\n            <Route path={`${path}/history`}>\n                <History/>\n            </Route>\n            <Route path={`${path}/profile`}>\n                <MyProfile userName={userName} userLevel={userLevel}/>\n            </Route>\n        </>\n    )\n}\n\nconst UserHomePage = (props) => {\n    const {url, userId} = props;\n    const [wait, setWait] = useState(false);\n\n    const handleOnClick = e => {\n        findOpponent(userId);\n    }\n\n    return (\n        <>\n            <h1 className=\"title glow-on-hover\">GO game</h1>\n            <div className=\"user-menu\">\n                <NavLink className=\"button\" to={`${url}/game`}>\n                    <div className=\"user-menu-text\" onClick={handleOnClick()}>Find Opponent</div>\n                </NavLink>\n                <NavLink className=\"button\" to={`${url}/history`}>\n                    <div className=\"user-menu-text\">History</div>\n                </NavLink>\n                <NavLink className=\"button\" to={`${url}/profile`}>\n                    <div className=\"user-menu-text\">My Profile</div>\n                </NavLink>\n            </div>\n            <img src={wait? waiting_img : ''} />\n        </>\n    )\n}\n\nexport {UserMenu};\n","/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/index.js",[],"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/useClientSocket.js",[],"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/axios.js",[],"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/board.js",[],"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/history.js",[],"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/myProfile.js",[],"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/privateRoute.js",[],"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/index.js",[],"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/line.js",[],"/Users/hansli112/NTU/Senior/Web Programming/Online-GO/frontend/src/components/star.js",[],{"ruleId":"80","severity":1,"message":"81","line":1,"column":16,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":36,"column":17,"nodeType":"86","messageId":"87","endLine":36,"endColumn":45},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"80","severity":1,"message":"92","line":1,"column":16,"nodeType":"82","messageId":"83","endLine":1,"endColumn":24},{"ruleId":"80","severity":1,"message":"93","line":11,"column":25,"nodeType":"82","messageId":"83","endLine":11,"endColumn":34},{"ruleId":"80","severity":1,"message":"94","line":14,"column":12,"nodeType":"82","messageId":"83","endLine":14,"endColumn":17},{"ruleId":"80","severity":1,"message":"95","line":14,"column":19,"nodeType":"82","messageId":"83","endLine":14,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":66,"column":12,"nodeType":"98","endLine":67,"endColumn":103},{"ruleId":"80","severity":1,"message":"99","line":1,"column":37,"nodeType":"82","messageId":"83","endLine":1,"endColumn":43},{"ruleId":"80","severity":1,"message":"100","line":18,"column":38,"nodeType":"82","messageId":"83","endLine":18,"endColumn":52},{"ruleId":"101","severity":1,"message":"102","line":78,"column":7,"nodeType":"103","endLine":78,"endColumn":24,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":86,"column":7,"nodeType":"103","endLine":86,"endColumn":19,"suggestions":"106"},{"ruleId":"80","severity":1,"message":"107","line":7,"column":17,"nodeType":"82","messageId":"83","endLine":7,"endColumn":25},{"ruleId":"101","severity":1,"message":"108","line":17,"column":8,"nodeType":"103","endLine":17,"endColumn":10,"suggestions":"109"},{"ruleId":"80","severity":1,"message":"110","line":41,"column":18,"nodeType":"82","messageId":"83","endLine":41,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":61,"column":13,"nodeType":"98","endLine":61,"endColumn":49},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'useState' is defined but never used.","'boardSize' is assigned a value but never used.","'myRow' is assigned a value but never used.","'myCol' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'myOpponentName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'myColor', 'myPosition', 'record', 'stepCount', and 'stone'. Either include them or remove the dependency array. You can also do a functional update 'setStepCount(s => ...)' if you only need 'stepCount' in the 'setStepCount' call.","ArrayExpression",["113"],"React Hook useEffect has missing dependencies: 'boardId', 'meToPlay', and 'userId'. Either include them or remove the dependency array.",["114"],"'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["115"],"'setWait' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [myColor, myPosition, opponentStepStr, record, stepCount, stone]",{"range":"122","text":"123"},"Update the dependencies array to be: [boardId, meToPlay, myPosition, userId]",{"range":"124","text":"125"},"Update the dependencies array to be: [userId]",{"range":"126","text":"127"},[3502,3519],"[myColor, myPosition, opponentStepStr, record, stepCount, stone]",[3759,3771],"[boardId, meToPlay, myPosition, userId]",[761,763],"[userId]"]